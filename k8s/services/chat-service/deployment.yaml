apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-service
  namespace: my-saas-chat
  labels:
    app: chat-service
    component: backend
    tier: application
spec:
  replicas: 2  # Higher resource needs due to AI processing
  selector:
    matchLabels:
      app: chat-service
  template:
    metadata:
      labels:
        app: chat-service
        component: backend
        tier: application
    spec:
      containers:
      - name: chat
        image: my-saas-chat/chat-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3002
          name: http
          protocol: TCP

        env:
        # Application config
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: NODE_ENV
        - name: PORT
          value: "3002"
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: LOG_LEVEL

        # Database URLs
        - name: MONGO_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: MONGO_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: REDIS_URL

        # API Keys
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys-secret
              key: OPENAI_API_KEY
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys-secret
              key: ANTHROPIC_API_KEY
              optional: true
        - name: GOOGLE_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys-secret
              key: GOOGLE_API_KEY
              optional: true
        - name: GROQ_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys-secret
              key: GROQ_API_KEY
              optional: true

        # Auth service URL
        - name: AUTH_SERVICE_URL
          value: "http://auth-service:3001"

        # Jaeger tracing
        - name: JAEGER_AGENT_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: JAEGER_AGENT_HOST
        - name: JAEGER_AGENT_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: JAEGER_AGENT_PORT
        - name: JAEGER_SERVICE_NAME
          value: "chat-service"

        # Optional: Sentry
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: api-keys-secret
              key: SENTRY_DSN
              optional: true

        resources:
          requests:
            memory: "384Mi"  # Higher for AI processing
            cpu: "300m"
          limits:
            memory: "768Mi"
            cpu: "1000m"

        livenessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 2
          failureThreshold: 3

      # Note: MongoDB would need init container if using MongoDB pod
      # Currently assuming MongoDB is deployed separately or as StatefulSet
