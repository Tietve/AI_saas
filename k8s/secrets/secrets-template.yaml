# =============================================================================
# KUBERNETES SECRETS TEMPLATE
# =============================================================================
# DO NOT commit actual secrets to git!
# This file shows the structure. Create secrets using kubectl commands.
# =============================================================================

---
# Auth Secret
apiVersion: v1
kind: Secret
metadata:
  name: auth-secret
  namespace: my-saas-chat
type: Opaque
stringData:
  # Generate with: openssl rand -base64 48
  AUTH_SECRET: "REPLACE_WITH_YOUR_STRONG_SECRET"

---
# Database Secret
apiVersion: v1
kind: Secret
metadata:
  name: database-secret
  namespace: my-saas-chat
type: Opaque
stringData:
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "REPLACE_WITH_STRONG_PASSWORD"
  MONGO_INITDB_ROOT_USERNAME: "admin"
  MONGO_INITDB_ROOT_PASSWORD: "REPLACE_WITH_STRONG_PASSWORD"

---
# API Keys Secret
apiVersion: v1
kind: Secret
metadata:
  name: api-keys-secret
  namespace: my-saas-chat
type: Opaque
stringData:
  OPENAI_API_KEY: "sk-REPLACE_WITH_YOUR_OPENAI_KEY"
  ANTHROPIC_API_KEY: ""
  GOOGLE_API_KEY: ""
  GROQ_API_KEY: ""
  STRIPE_SECRET_KEY: "sk_REPLACE_WITH_YOUR_STRIPE_KEY"
  STRIPE_WEBHOOK_SECRET: ""
  SENTRY_DSN: ""

---
# SMTP Secret
apiVersion: v1
kind: Secret
metadata:
  name: smtp-secret
  namespace: my-saas-chat
type: Opaque
stringData:
  SMTP_HOST: "smtp.gmail.com"
  SMTP_USER: "your-email@gmail.com"
  SMTP_PASS: "your-app-password"

# =============================================================================
# HOW TO CREATE SECRETS
# =============================================================================
#
# Method 1: From literals (recommended for testing)
# kubectl create secret generic auth-secret \
#   --from-literal=AUTH_SECRET="$(openssl rand -base64 48)" \
#   -n my-saas-chat
#
# Method 2: From files (recommended for production)
# echo -n "your-secret-here" > ./auth-secret.txt
# kubectl create secret generic auth-secret \
#   --from-file=AUTH_SECRET=./auth-secret.txt \
#   -n my-saas-chat
# rm ./auth-secret.txt
#
# Method 3: Apply this file after editing (NOT recommended - secrets visible)
# kubectl apply -f secrets.yaml
#
# =============================================================================
