apiVersion: apps/v1
kind: Deployment
metadata:
  name: billing-service
  namespace: production
  labels:
    app: billing-service
    service: billing
    version: v1.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: billing-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: billing-service
        service: billing
        version: v1.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3003"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: billing-service
        image: billing-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3003
          name: http
          protocol: TCP
        env:
        - name: PORT
          value: "3003"
        - name: SERVICE_NAME
          value: "billing-service"
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3003
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /health
            port: 3003
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
