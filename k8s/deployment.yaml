# ================================
# Next.js Application Deployment
# ================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-saas-app
  namespace: ai-saas
  labels:
    app: ai-saas-app
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ai-saas-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: ai-saas-app
        version: v1
    spec:
      # Init container to run migrations
      initContainers:
        - name: db-migrations
          image: your-registry/ai-saas:latest
          command:
            - /bin/sh
            - -c
            - |
              echo "Running database migrations..."
              npx prisma migrate deploy
              echo "Migrations completed"
          envFrom:
            - configMapRef:
                name: ai-saas-config
            - secretRef:
                name: ai-saas-secrets

      containers:
        - name: app
          image: your-registry/ai-saas:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          envFrom:
            - configMapRef:
                name: ai-saas-config
            - secretRef:
                name: ai-saas-secrets
          env:
            - name: INSTANCE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 12
---
# ================================
# Service - ClusterIP
# ================================
apiVersion: v1
kind: Service
metadata:
  name: ai-saas-service
  namespace: ai-saas
  labels:
    app: ai-saas-app
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: http
  selector:
    app: ai-saas-app
---
# ================================
# Horizontal Pod Autoscaler
# ================================
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ai-saas-hpa
  namespace: ai-saas
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ai-saas-app
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Percent
          value: 100
          periodSeconds: 30
        - type: Pods
          value: 2
          periodSeconds: 30
      selectPolicy: Max
